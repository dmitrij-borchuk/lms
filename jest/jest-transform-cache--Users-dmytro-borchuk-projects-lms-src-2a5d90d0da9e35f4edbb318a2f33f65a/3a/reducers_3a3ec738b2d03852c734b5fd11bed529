/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_2fqh6k03v = function () {var path = '/Users/dmytro.borchuk/projects/lms/src/app/reducers.js',hash = '8d1eecef0c73de9434d0c22dd13bb18c0789a2ee',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/Users/dmytro.borchuk/projects/lms/src/app/reducers.js', statementMap: { '0': { start: { line: 21, column: 26 }, end: { line: 23, column: 2 } }, '1': { start: { line: 29, column: 2 }, end: { line: 37, column: 3 } }, '2': { start: { line: 36, column: 6 }, end: { line: 36, column: 19 } }, '3': { start: { line: 44, column: 2 }, end: { line: 48, column: 5 } } }, fnMap: { '0': { name: 'routeReducer', decl: { start: { line: 28, column: 9 }, end: { line: 28, column: 21 } }, loc: { start: { line: 28, column: 57 }, end: { line: 38, column: 1 } } }, '1': { name: 'createReducer', decl: { start: { line: 43, column: 24 }, end: { line: 43, column: 37 } }, loc: { start: { line: 43, column: 53 }, end: { line: 49, column: 1 } } } }, branchMap: { '0': { loc: { start: { line: 28, column: 22 }, end: { line: 28, column: 47 } }, type: 'default-arg', locations: [{ start: { line: 28, column: 30 }, end: { line: 28, column: 47 } }] }, '1': { loc: { start: { line: 29, column: 2 }, end: { line: 37, column: 3 } }, type: 'switch', locations: [{ start: { line: 35, column: 4 }, end: { line: 36, column: 19 } }] } }, s: { '0': 0, '1': 0, '2': 0, '3': 0 }, f: { '0': 0, '1': 0 }, b: { '0': [0], '1': [0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;}; /**
ombine all reducers in this file and export the combined reducers.
f we were to do this in store.js, reducers wouldn't be hot reloadable.
exports.default =






































createReducer;var /* istanbul ignore next */_reduxImmutable = require('redux-immutable');var /* istanbul ignore next */_immutable = require('immutable');var /* istanbul ignore next */_reactRouterRedux = require('react-router-redux');var /* istanbul ignore next */_reducer = require('containers/LanguageProvider/reducer'); /* istanbul ignore next */var _reducer2 = _interopRequireDefault(_reducer);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * routeReducer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * The reducer merges route location changes into our immutable state.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * The change is necessitated by moving to react-router-redux@4
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */ // Initial routing state
var routeInitialState = /* istanbul ignore next */(++cov_2fqh6k03v.s[0], /* istanbul ignore next */(0, _immutable.fromJS)({ locationBeforeTransitions: null })); /**
                                                                                                                                                                  * Merge route into the global application state
                                                                                                                                                                  */function routeReducer() {/* istanbul ignore next */var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (++cov_2fqh6k03v.b[0][0], routeInitialState); /* istanbul ignore next */var action = arguments[1]; /* istanbul ignore next */++cov_2fqh6k03v.f[0];++cov_2fqh6k03v.s[1];switch (action.type) {/* istanbul ignore next */case /* istanbul ignore next */_reactRouterRedux.LOCATION_CHANGE:return state.merge({ locationBeforeTransitions: action.payload });default: /* istanbul ignore next */++cov_2fqh6k03v.b[1][0];++cov_2fqh6k03v.s[2];return state;}} /**
reates the main reducer with the asynchronously loaded ones
function createReducer(asyncReducers) {/* istanbul ignore next */++cov_2fqh6k03v.f[1];++cov_2fqh6k03v.s[3];return (/* istanbul ignore next */(0, _reduxImmutable.combineReducers)( /* istanbul ignore next */_extends({ route: routeReducer, language: /* istanbul ignore next */_reducer2.default }, asyncReducers)));}