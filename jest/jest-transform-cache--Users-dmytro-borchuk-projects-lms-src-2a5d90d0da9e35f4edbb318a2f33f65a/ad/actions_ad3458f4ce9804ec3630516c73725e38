/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_1q4f311qwk = function () {var path = '/Users/dmytro.borchuk/projects/lms/src/app/containers/LanguageProvider/actions.js',hash = '41ef948082d508478ea4dab4358f76e61d2e8f13',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/Users/dmytro.borchuk/projects/lms/src/app/containers/LanguageProvider/actions.js', statementMap: { '0': { start: { line: 12, column: 2 }, end: { line: 15, column: 4 } } }, fnMap: { '0': { name: 'changeLocale', decl: { start: { line: 11, column: 16 }, end: { line: 11, column: 28 } }, loc: { start: { line: 11, column: 45 }, end: { line: 16, column: 1 } } } }, branchMap: {}, s: { '0': 0 }, f: { '0': 0 }, b: {}, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}(); /*

anguageProvider actions

exports.





changeLocale = changeLocale;var /* istanbul ignore next */_constants = require('./constants');function changeLocale(languageLocale) {/* istanbul ignore next */++cov_1q4f311qwk.f[0];++cov_1q4f311qwk.s[0];
  return {
    type: /* istanbul ignore next */_constants.CHANGE_LOCALE,
    locale: languageLocale };

}