/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_h0watvsss = function () {var path = '/Users/dmytro.borchuk/projects/lms/src/app/containers/HomePage/index.js',hash = 'eaa5a2f929d0ca6b9cbf63f67a2eb7b161b2c908',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/Users/dmytro.borchuk/projects/lms/src/app/containers/HomePage/index.js', statementMap: { '0': { start: { line: 18, column: 4 }, end: { line: 22, column: 6 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 17, column: 2 }, end: { line: 17, column: 3 } }, loc: { start: { line: 17, column: 11 }, end: { line: 23, column: 3 } } } }, branchMap: {}, s: { '0': 0 }, f: { '0': 0 }, b: {}, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();










var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_messages = require('./messages'); /* istanbul ignore next */var _messages2 = _interopRequireDefault(_messages);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} /*
omePage

his is the first thing users see of our App, at the '/' route

while this component should technically be a stateless functional
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * component (SFC), hot reloading does not currently support SFCs. If hot
reloading is not a necessity for you then you can refactor it and remove
the linting exception.
var HomePage = function (_React$PureComponent) {_inherits(HomePage, _React$PureComponent);function HomePage() {_classCallCheck(this, HomePage);return _possibleConstructorReturn(this, (HomePage.__proto__ || Object.getPrototypeOf(HomePage)).apply(this, arguments));}_createClass(HomePage, [{ key: 'render', // eslint-disable-line react/prefer-stateless-function
    value: function render() {/* istanbul ignore next */++cov_h0watvsss.f[0];++cov_h0watvsss.s[0];return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h1', /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */_messages2.default.header)));} }]);return HomePage;}( /* istanbul ignore next */_react2.default.PureComponent); /* istanbul ignore next */exports.default = HomePage;